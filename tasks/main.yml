---

- name: Include distribution and version-specific vars
  ansible.builtin.include_vars: "{{ item }}"
  with_first_found:
    - files:
        - "{{ ansible_distribution }}-{{ ansible_distribution_major_version }}.yml"
      skip: true

- name: Define docker_arm_required_packages
  set_fact:
    docker_arm_required_packages: "{{ __docker_arm_required_packages }}"
  when: docker_arm_required_packages is not defined

- name: Check if Docker is already present
  ansible.builtin.command: which docker
  failed_when: false
  changed_when: false
  check_mode: false
  register: docker_command_result

- name: Download Docker install convenience script
  ansible.builtin.get_url:
    url: https://get.docker.com/
    dest: /tmp/get-docker.sh
    mode: 0775
  when: docker_command_result.rc == 1

- name: Run Docker install convenience script
  ansible.builtin.command: /tmp/get-docker.sh
  environment:
    CHANNEL: stable
  when: docker_command_result.rc == 1

- name: Ensure Docker is started
  ansible.builtin.service:
    name: docker
    state: started
    enabled: true

- name: Ensure dependencies are installed
  ansible.builtin.apt:
    name: "{{ docker_arm_required_packages }}"
    state: present

- name: Configure Docker daemon options.
  copy:
    content: "{{ docker_daemon_options | to_nice_json }}"
    dest: /etc/docker/daemon.json
    mode: 0644
  when: docker_daemon_options.keys() | length > 0
  notify: Restart docker

- name: Install Docker Compose using Pip
  ansible.builtin.pip:
    name: docker-compose
    state: present
    executable: pip3
  when: docker_install_compose

- name: "Ensure {{ ansible_user_id }} user is added to the docker group"
  ansible.builtin.user:
    name: "{{ ansible_user_id }}"
    groups: docker
    append: true

- name: Reset connection so docker group is picked up.
  meta: reset_connection
